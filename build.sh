#!/usr/bin/env bash
# Script de build automatique pour Render

set -e  # Arr√™ter le script en cas d'erreur

echo "üöÄ D√©marrage du build automatique..."

# V√©rifier la version Python
echo "üêç Version Python:"
python --version

# Mettre √† jour pip
echo "üì¶ Mise √† jour de pip..."
pip install --upgrade pip

# Installer les d√©pendances Python
echo "üì¶ Installation des d√©pendances Python..."
pip install -r requirements.txt

# Installer Pillow (optionnel)
echo "üì¶ Installation de Pillow (optionnel)..."
pip install Pillow==11.3.0 || echo "‚ö†Ô∏è Pillow non install√©, images d√©sactiv√©es"

# V√©rifier Django
echo "üîç V√©rification de Django..."
python -c "import django; print(f'Django version: {django.get_version()}')"

# V√©rifier Pillow
echo "üñºÔ∏è V√©rification de Pillow..."
python -c "import PIL; print(f'Pillow version: {PIL.__version__}')" 2>/dev/null || echo "‚ö†Ô∏è Pillow non disponible"

# V√©rifier la configuration
echo "‚öôÔ∏è V√©rification de la configuration..."
python manage.py check --deploy

# Collecter les fichiers statiques
echo "üìÅ Collecte des fichiers statiques..."
python manage.py collectstatic --noinput

# V√©rifier la base de donn√©es
echo "üóÑÔ∏è V√©rification de la base de donn√©es..."
python manage.py shell -c "
from django.db import connection
try:
    with connection.cursor() as cursor:
        cursor.execute('SELECT 1')
    print('‚úÖ Connexion base de donn√©es OK')
except Exception as e:
    print(f'‚ùå Erreur base de donn√©es: {e}')
    print('üîÑ Utilisation de SQLite...')
"

# Appliquer les migrations
echo "üóÑÔ∏è Application des migrations..."
python manage.py migrate --noinput

# Cr√©er un superuser automatiquement
echo "üë§ Cr√©ation d'un superuser par d√©faut..."
python manage.py shell -c "
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(username='admin').exists():
    User.objects.create_superuser('admin', 'admin@example.com', 'admin123')
    print('‚úÖ Superuser cr√©√©: admin/admin123')
else:
    print('‚ÑπÔ∏è Superuser existe d√©j√†')
"

# Cr√©er les donn√©es de test automatiquement
echo "üìä Cr√©ation des donn√©es de test..."
python manage.py shell -c "
from boutique.models import *
from decimal import Decimal
from django.utils import timezone

try:
    # Cr√©er des g√¢teaux de test
    if Gateau.objects.count() == 0:
        gateaux_data = [
            {'nom': 'G√¢teau d\'Anniversaire Chocolat', 'description': 'D√©licieux g√¢teau au chocolat pour anniversaire', 'prix': Decimal('15000.00'), 'type': 'anniversaire'},
            {'nom': 'G√¢teau de Mariage Vanille', 'description': 'Magnifique g√¢teau de mariage √† la vanille', 'prix': Decimal('25000.00'), 'type': 'mariage'},
            {'nom': 'Cupcakes Assortis', 'description': 'Assortiment de cupcakes color√©s', 'prix': Decimal('8000.00'), 'type': 'autre'},
            {'nom': 'G√¢teau au Citron', 'description': 'G√¢teau frais au citron', 'prix': Decimal('12000.00'), 'type': 'autre'},
            {'nom': 'G√¢teau Red Velvet', 'description': 'G√¢teau rouge velours √©l√©gant', 'prix': Decimal('18000.00'), 'type': 'anniversaire'},
        ]
        
        for data in gateaux_data:
            Gateau.objects.create(**data)
        print(f'‚úÖ {len(gateaux_data)} g√¢teaux cr√©√©s')
    else:
        print(f'‚ÑπÔ∏è {Gateau.objects.count()} g√¢teaux existent d√©j√†')

    # Cr√©er des param√®tres de livraison
    if ParametresLivraison.objects.count() == 0:
        ParametresLivraison.objects.create(prix_livraison=Decimal('2000.00'))
        print('‚úÖ Param√®tres de livraison cr√©√©s')
    else:
        print('‚ÑπÔ∏è Param√®tres de livraison existent d√©j√†')

    # Cr√©er des utilisateurs de test
    if User.objects.filter(is_patron=True).count() == 0:
        patron = User.objects.create_user(
            username='patron',
            email='patron@example.com',
            password='patron123',
            is_patron=True
        )
        print('‚úÖ Patron cr√©√©: patron/patron123')
    else:
        print('‚ÑπÔ∏è Patron existe d√©j√†')

    if User.objects.filter(is_collaborateur=True).count() == 0:
        collaborateur = User.objects.create_user(
            username='collaborateur',
            email='collaborateur@example.com',
            password='collaborateur123',
            is_collaborateur=True
        )
        print('‚úÖ Collaborateur cr√©√©: collaborateur/collaborateur123')
    else:
        print('‚ÑπÔ∏è Collaborateur existe d√©j√†')

    # Cr√©er un article de test
    if ArticleEvenement.objects.count() == 0:
        ArticleEvenement.objects.create(
            titre='Bienvenue dans notre p√¢tisserie',
            contenu='D√©couvrez nos d√©licieux g√¢teaux faits maison avec amour et passion.',
            date_evenement=timezone.now(),
            actif=True
        )
        print('‚úÖ Article de test cr√©√©')
    else:
        print('‚ÑπÔ∏è Articles existent d√©j√†')

    print('üéâ Donn√©es de test cr√©√©es avec succ√®s!')
except Exception as e:
    print(f'‚ùå Erreur lors de la cr√©ation des donn√©es: {e}')
"

# V√©rifier que l'application peut d√©marrer
echo "üîß Test de d√©marrage de l'application..."
python manage.py check

echo "‚úÖ Build termin√© avec succ√®s!"

