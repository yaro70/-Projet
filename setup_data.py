#!/usr/bin/env python
"""
Script pour configurer les donn√©es apr√®s d√©ploiement
"""

import os
import django
from decimal import Decimal

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'patisserie_project.settings_render')
django.setup()

from django.contrib.auth import get_user_model
from django.db import connection
from boutique.models import *

def setup_data():
    print("üîß Configuration des donn√©es...")
    
    # V√©rifier et corriger la structure de la base de donn√©es
    try:
        with connection.cursor() as cursor:
            # V√©rifier si date_creation existe dans Gateau
            cursor.execute("PRAGMA table_info(boutique_gateau)")
            columns = [col[1] for col in cursor.fetchall()]
            
            if 'date_creation' not in columns:
                print("üìù Ajout de date_creation √† Gateau...")
                cursor.execute("ALTER TABLE boutique_gateau ADD COLUMN date_creation DATETIME DEFAULT CURRENT_TIMESTAMP")
            
            # V√©rifier si contenu existe dans ArticleEvenement
            cursor.execute("PRAGMA table_info(boutique_articleevenement)")
            columns = [col[1] for col in cursor.fetchall()]
            
            if 'contenu' not in columns:
                print("üìù Ajout de contenu √† ArticleEvenement...")
                cursor.execute("ALTER TABLE boutique_articleevenement ADD COLUMN contenu TEXT")
            
            if 'date_evenement' not in columns:
                print("üìù Ajout de date_evenement √† ArticleEvenement...")
                cursor.execute("ALTER TABLE boutique_articleevenement ADD COLUMN date_evenement DATETIME")
            
            if 'actif' not in columns:
                print("üìù Ajout de actif √† ArticleEvenement...")
                cursor.execute("ALTER TABLE boutique_articleevenement ADD COLUMN actif BOOLEAN DEFAULT 1")
                
    except Exception as e:
        print(f"‚ö†Ô∏è Erreur lors de la v√©rification de la base de donn√©es: {e}")
    
    # Cr√©er superuser
    User = get_user_model()
    if not User.objects.filter(username='admin').exists():
        User.objects.create_superuser('admin', 'admin@example.com', 'admin123')
        print("‚úÖ Superuser cr√©√©: admin/admin123")
    
    # Cr√©er g√¢teaux
    if Gateau.objects.count() == 0:
        gateaux_data = [
            {'nom': 'G√¢teau d\'Anniversaire Chocolat', 'description': 'D√©licieux g√¢teau au chocolat', 'prix': Decimal('15000.00')},
            {'nom': 'G√¢teau de Mariage Vanille', 'description': 'Magnifique g√¢teau de mariage', 'prix': Decimal('25000.00')},
            {'nom': 'Cupcakes Assortis', 'description': 'Assortiment de cupcakes', 'prix': Decimal('8000.00')},
        ]
        
        for data in gateaux_data:
            Gateau.objects.create(**data)
        print(f"‚úÖ {len(gateaux_data)} g√¢teaux cr√©√©s")
    
    # Cr√©er param√®tres
    if ParametresLivraison.objects.count() == 0:
        ParametresLivraison.objects.create(prix_livraison=Decimal('2000.00'))
        print("‚úÖ Param√®tres de livraison cr√©√©s")
    
    # Cr√©er utilisateurs
    if User.objects.filter(is_patron=True).count() == 0:
        User.objects.create_user('patron', 'patron@example.com', 'patron123', is_patron=True)
        print("‚úÖ Patron cr√©√©: patron/patron123")
    
    if User.objects.filter(is_collaborateur=True).count() == 0:
        User.objects.create_user('collaborateur', 'collaborateur@example.com', 'collaborateur123', is_collaborateur=True)
        print("‚úÖ Collaborateur cr√©√©: collaborateur/collaborateur123")
    
    print("üéâ Configuration termin√©e!")

if __name__ == '__main__':
    setup_data()
