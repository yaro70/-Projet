#!/usr/bin/env python3
"""
Script pour cr√©er des donn√©es de test pour les √©v√©nements et la galerie
"""

import os
import sys
import django
from datetime import datetime, date

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'patisserie_project.settings')
django.setup()

from boutique.models import *

def create_test_events():
    """Cr√©e des √©v√©nements de test"""
    print("üì∞ Cr√©ation des √©v√©nements de test...")
    
    # Supprimer les anciens √©v√©nements
    ArticleEvenement.objects.all().delete()
    
    events_data = [
        {
            'titre': 'Atelier P√¢tisserie pour Enfants',
            'contenu': 'D√©couvrez l\'art de la p√¢tisserie avec nos ateliers sp√©cialement con√ßus pour les enfants. Apprenez √† cr√©er de d√©licieux cupcakes et cookies.',
            'date_evenement': datetime(2024, 12, 25, 14, 0),
            'actif': True
        },
        {
            'titre': 'Formation G√¢teaux de Mariage',
            'contenu': 'Formation intensive pour apprendre les techniques de cr√©ation de g√¢teaux de mariage √©l√©gants et sophistiqu√©s.',
            'date_evenement': datetime(2024, 12, 30, 9, 0),
            'actif': True
        },
        {
            'titre': 'D√©gustation de Nouveaux G√¢teaux',
            'contenu': 'Venez d√©couvrir nos nouvelles cr√©ations et donner votre avis sur nos prochains g√¢teaux.',
            'date_evenement': datetime(2025, 1, 15, 16, 0),
            'actif': True
        }
    ]
    
    for event_data in events_data:
        ArticleEvenement.objects.create(**event_data)
    
    print(f"‚úÖ {len(events_data)} √©v√©nements cr√©√©s")

def create_test_gallery():
    """Cr√©e des photos de galerie de test"""
    print("üì∏ Cr√©ation des photos de galerie de test...")
    
    # Supprimer les anciennes photos
    GaleriePhoto.objects.all().delete()
    
    gallery_data = [
        {
            'titre': 'G√¢teau d\'Anniversaire Multicolore',
            'description': 'Magnifique g√¢teau d\'anniversaire avec des couleurs vives et des d√©corations festives',
            'categorie': 'gateaux',
            'date_realisation': date(2024, 10, 15),
            'ordre_affichage': 10,
            'visible': True
        },
        {
            'titre': 'Atelier P√¢tisserie Enfants',
            'description': 'Photos de notre dernier atelier p√¢tisserie pour enfants',
            'categorie': 'ateliers',
            'date_realisation': date(2024, 11, 20),
            'ordre_affichage': 9,
            'visible': True
        },
        {
            'titre': 'G√¢teau de Mariage √âl√©gant',
            'description': 'G√¢teau de mariage sophistiqu√© avec d√©corations florales',
            'categorie': 'gateaux',
            'date_realisation': date(2024, 9, 10),
            'ordre_affichage': 8,
            'visible': True
        },
        {
            'titre': '√âv√©nement D√©gustation',
            'description': 'Photos de notre dernier √©v√©nement de d√©gustation',
            'categorie': 'evenements',
            'date_realisation': date(2024, 12, 5),
            'ordre_affichage': 7,
            'visible': True
        }
    ]
    
    for photo_data in gallery_data:
        GaleriePhoto.objects.create(**photo_data)
    
    print(f"‚úÖ {len(gallery_data)} photos de galerie cr√©√©es")

def main():
    """Fonction principale"""
    print("üîß Cr√©ation des donn√©es de test")
    print("=" * 40)
    
    try:
        create_test_events()
        create_test_gallery()
        
        print("\nüéâ Donn√©es de test cr√©√©es avec succ√®s!")
        
        # Afficher les statistiques
        print(f"\nüìä Statistiques:")
        print(f"   - √âv√©nements: {ArticleEvenement.objects.count()}")
        print(f"   - Photos galerie: {GaleriePhoto.objects.count()}")
        print(f"   - G√¢teaux: {Gateau.objects.count()}")
        
    except Exception as e:
        print(f"‚ùå Erreur : {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()

