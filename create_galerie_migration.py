#!/usr/bin/env python3
"""
Cr√©ation et application de la migration pour la galerie photos
"""

import os
import sys
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'patisserie_project.settings')
django.setup()

from django.core.management import call_command
import subprocess

def create_galerie_migration():
    """Cr√©er et appliquer la migration pour la galerie photos"""
    
    print("üì∏ Cr√©ation et application de la migration de la galerie photos:")
    print("=" * 60)
    
    try:
        # 1. Cr√©er la migration
        print("\n1Ô∏è‚É£ Cr√©ation de la migration...")
        call_command('makemigrations', 'boutique')
        print("‚úÖ Migration cr√©√©e avec succ√®s")
        
        # 2. Appliquer la migration
        print("\n2Ô∏è‚É£ Application de la migration...")
        call_command('migrate')
        print("‚úÖ Migration appliqu√©e avec succ√®s")
        
        # 3. V√©rifier les mod√®les
        print("\n3Ô∏è‚É£ V√©rification des mod√®les...")
        from boutique.models import GaleriePhoto
        
        # V√©rifier que le mod√®le existe
        print(f"‚úÖ Mod√®le GaleriePhoto disponible")
        print(f"üìä Champs: {[field.name for field in GaleriePhoto._meta.fields]}")
        print(f"üìÇ Cat√©gories: {dict(GaleriePhoto.CATEGORIES)}")
        
        # 4. Test de cr√©ation d'une photo
        print("\n4Ô∏è‚É£ Test de cr√©ation d'une photo...")
        
        # Cr√©er une photo de test (sans image pour le moment)
        photo = GaleriePhoto.objects.create(
            titre="G√¢teau d'Anniversaire Test",
            description="Un d√©licieux g√¢teau d'anniversaire avec des d√©corations color√©es",
            categorie="anniversaire",
            date_realisation="2025-07-29",
            ordre_affichage=1
        )
        
        print(f"‚úÖ Photo cr√©√©e: #{photo.id}")
        print(f"üì∞ Titre: {photo.titre}")
        print(f"üìÇ Cat√©gorie: {photo.get_categorie_display()}")
        print(f"üìÖ Date: {photo.date_realisation}")
        
        # Nettoyer le test
        photo.delete()
        print("üßπ Photo de test supprim√©e")
        
        print("\nüéâ Migration de la galerie termin√©e avec succ√®s!")
        print("\nüìã Prochaines √©tapes:")
        print("1. Tester l'API: python test_galerie.py")
        print("2. D√©marrer le serveur: python manage.py runserver")
        print("3. Tester dans l'application web")
        print("4. Ajouter des photos via le dashboard patron")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la migration: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    create_galerie_migration() 